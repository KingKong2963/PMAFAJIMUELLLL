<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/about.css">
    <style>
        .wysiwyg-input, .wysiwyg-textarea { background-color: rgba(239, 246, 255, 0.3); border: 1px dashed rgba(0, 0, 0, 0.2); padding: 2px 4px; margin: 0 0 2px 0; display: inline-block; width: auto; min-width: 100px; border-radius: 3px; color: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline; }
        .wysiwyg-textarea { width: 100%; min-height: 80px; display: block; resize: vertical; } /* Adjusted height */
        .wysiwyg-file-input-container { border: 1px dashed rgba(0, 0, 0, 0.2); padding: 10px; margin-top: 10px; border-radius: 5px; background-color: rgba(239, 246, 255, 0.3); }
        .wysiwyg-file-input-container img.preview-image { max-height: 150px; margin-bottom: 5px; border: 1px solid #eee; border-radius: 3px; display: inline-block; vertical-align: middle; margin-right: 10px; }
        .wysiwyg-file-input { display: inline-block; width: auto; font-size: 0.9em; vertical-align: middle; }
        .wysiwyg-input:hover, .wysiwyg-textarea:hover, .wysiwyg-file-input-container:hover { border: 1px dashed #4f46e5; background-color: rgba(224, 231, 255, 0.4); }
        .wysiwyg-file-input::file-selector-button { font-size: 0.8em; padding: 4px 8px; margin-right: 5px; border-radius: 3px; border: 1px solid #ccc; background-color: #f0f0f0; cursor: pointer; }
        #save-changes-btn { position: fixed; bottom: 20px; right: 20px; z-index: 100; }
        .goal-item-edit { display: flex; align-items: center; margin-bottom: 0.5rem; position: relative; padding-right: 30px; /* Space for remove button */ }
        .goal-item-edit .wysiwyg-input { flex-grow: 1; } /* Make input take remaining space */
        .remove-item-btn { position: absolute; top: 50%; right: 0; transform: translateY(-50%); background-color: rgba(255, 0, 0, 0.6); color: white; border-radius: 50%; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; font-size: 0.7em; cursor: pointer; border: none; line-height: 0; }
        .remove-item-btn:hover { background-color: rgba(255, 0, 0, 0.8); }
        .add-item-container { text-align: center; padding: 15px; border-top: 1px solid #eee; margin-top: 15px; }
        /* public/css/styles.css or public/css/admin.css */

/* Make the specific nav element scrollable */
.admin-nav-scroll {
  overflow-y: auto; /* Add vertical scrollbar ONLY when needed */
  overflow-x: hidden; /* Hide horizontal scrollbar */
  padding-bottom: 1rem; /* Add some space at the bottom */
}

/* Optional: Custom Scrollbar Styling (Webkit browsers like Chrome/Safari/Edge) */
.admin-nav-scroll::-webkit-scrollbar {
  width: 6px; /* Width of the scrollbar */
}

.admin-nav-scroll::-webkit-scrollbar-track {
  background: rgba(67, 56, 202, 0.2); /* Slightly visible indigo track */
  border-radius: 10px;
}

.admin-nav-scroll::-webkit-scrollbar-thumb {
  background-color: rgba(79, 70, 229, 0.7); /* Indigo-600 thumb */
  border-radius: 10px;
  border: 1px solid transparent; /* Optional padding around thumb */
  background-clip: content-box;
}

.admin-nav-scroll::-webkit-scrollbar-thumb:hover {
  background-color: rgba(67, 56, 202, 1); /* Darker indigo on hover */
}
    </style>
</head>
<body class="bg-gray-100">
    <div class="flex h-screen">
        <%- include('partials/sidebar', { currentPage: currentPage }) %>

        <div class="flex-1 overflow-y-auto">
             <% if (typeof goalsData === 'undefined' || !goalsData) { %>
                 <div class="p-10 bg-red-100 border border-red-400 text-red-700" role="alert">Error loading goals data.</div>
             <% } else { %>
                <form action="/admin/edit-goals" method="POST" enctype="multipart/form-data" id="edit-goals-form">
                    <main>
                        <section class="about-hero bg-cover bg-center h-80 md:h-96 text-white flex items-center relative" style="background-image: url('<%= goalsData.hero?.backgroundImage ?? '/images/about-hero.jpg' %>')">
                            <div class="absolute inset-0 bg-gradient-to-r from-blue-900/80 to-indigo-900/80 z-10"></div>
                            <div class="container mx-auto text-center relative z-20 px-4">
                                <h1 class="text-4xl md:text-5xl font-bold mb-4">
                                    <input type="text" name="hero.title" value="<%= goalsData.hero?.title ?? '' %>" class="wysiwyg-input text-center text-4xl md:text-5xl font-bold text-white bg-transparent border-dashed border-gray-400 hover:border-white focus:border-white focus:ring-0" style="width: 80%;">
                                </h1>
                                <p class="text-lg md:text-xl max-w-3xl mx-auto">
                                    <textarea name="hero.subtitle" rows="2" class="wysiwyg-textarea text-center text-lg md:text-xl text-white bg-transparent border-dashed border-gray-400 hover:border-white focus:border-white focus:ring-0 w-full max-w-3xl mx-auto"><%= goalsData.hero?.subtitle ?? '' %></textarea>
                                </p>
                                <div class="mt-8 max-w-md mx-auto">
                                    <div class="wysiwyg-file-input-container bg-black bg-opacity-30 text-left">
                                        <label class="block text-sm font-medium text-gray-200 mb-1" for="heroBackgroundImage">Edit Hero Background Image</label>
                                        <% if (goalsData.hero?.backgroundImage) { %>
                                            <div class="mb-1 inline-block"><img src="<%= goalsData.hero.backgroundImage %>" alt="Current Hero Background" class="preview-image"></div>
                                        <% } %>
                                        <input type="file" id="heroBackgroundImage" name="heroBackgroundImage" accept="image/*" class="wysiwyg-file-input text-gray-300">
                                        <p class="mt-1 text-xs text-gray-400 block">Upload new image. Leave empty to keep current.</p>
                                    </div>
                                </div>
                            </div>
                        </section>

                        <section class="py-16 md:py-20 bg-gray-50">
                             <div class="container mx-auto px-4">
                               <div class="max-w-4xl mx-auto bg-white p-8 md:p-12 rounded-lg shadow-lg">
                                   <div class="text-center mb-10">
                                       <i class="fas fa-list-check text-4xl text-indigo-600 mb-4"></i>
                                       <h2 class="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
                                            <input type="text" name="content.title" value="<%= goalsData.content?.title ?? '' %>" class="wysiwyg-input text-center text-3xl md:text-4xl font-bold w-full">
                                       </h2>
                                       <div class="w-20 h-1 bg-indigo-500 mx-auto"></div>
                                   </div>
                                   <%# Editable List of Goals %>
                                    <div id="goals-list-container" class="space-y-2 text-lg text-gray-700 list-none pl-0 md:pl-6">
                                        <% if(goalsData.content?.goals && goalsData.content.goals.length > 0) { %>
                                            <% goalsData.content.goals.forEach((goal, index) => { %>
                                                <div class="goal-item-edit">
                                                     <span class="text-indigo-500 mr-3 mt-1"><i class="fas fa-check-circle"></i></span>
                                                     <%# Use text input for single-line goals %>
                                                     <input type="text" name="content.goals[<%= index %>]" value="<%= goal %>" class="wysiwyg-input text-lg text-gray-700">
                                                     <button type="button" class="remove-item-btn" data-index="<%= index %>"><i class="fas fa-times"></i></button>
                                                 </div>
                                            <% }) %>
                                        <% } else { %>
                                             <p class="text-center text-gray-500 italic">No goals defined yet. Click "Add Goal" to begin.</p>
                                        <% } %>
                                    </div>
                                     <div class="add-item-container">
                                         <button type="button" id="add-goal-btn" class="bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 text-sm">
                                             <i class="fas fa-plus mr-1"></i> Add Goal
                                         </button>
                                     </div>
                               </div>
                             </div>
                           </section>
                    </main>

                    <button type="submit" id="save-changes-btn" class="bg-indigo-600 text-white py-3 px-6 rounded-lg shadow-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition transform hover:scale-105">
                        <i class="fas fa-save mr-2"></i> Save Changes
                    </button>
                </form>
             <% } %>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const goalsContainer = document.getElementById('goals-list-container');
            const addGoalBtn = document.getElementById('add-goal-btn');

            const updateGoalIndices = () => {
                const goalItems = goalsContainer.querySelectorAll('.goal-item-edit');
                const goalCount = goalItems.length;
                goalItems.forEach((item, index) => {
                    const input = item.querySelector('input[name^="content.goals"]');
                    if(input) input.name = `content.goals[${index}]`;

                    const removeBtn = item.querySelector('.remove-item-btn');
                    if(removeBtn) removeBtn.dataset.index = index;
                    // No minimum required for goals
                });
                 const noGoalsMsg = document.querySelector('#goals-list-container > p.text-gray-500');
                 if (noGoalsMsg) noGoalsMsg.style.display = goalCount === 0 ? 'block' : 'none';
            };

            if(addGoalBtn && goalsContainer) {
                addGoalBtn.addEventListener('click', () => {
                    const currentGoalCount = goalsContainer.querySelectorAll('.goal-item-edit').length;
                    // Optional: Add max goal limit check here

                    const newGoalItem = document.createElement('div');
                    newGoalItem.className = 'goal-item-edit';
                    newGoalItem.innerHTML = `
                        <span class="text-indigo-500 mr-3 mt-1"><i class="fas fa-check-circle"></i></span>
                        <input type="text" name="content.goals[${currentGoalCount}]" value="" placeholder="New Goal" class="wysiwyg-input text-lg text-gray-700">
                        <button type="button" class="remove-item-btn" data-index="${currentGoalCount}"><i class="fas fa-times"></i></button>
                    `;
                    // Remove the placeholder message if it exists
                    const noGoalsMsg = goalsContainer.querySelector('p.text-gray-500');
                    if (noGoalsMsg) noGoalsMsg.remove();

                    goalsContainer.appendChild(newGoalItem);
                    updateGoalIndices(); // Renumber inputs
                });
            }

            if(goalsContainer) {
                 goalsContainer.addEventListener('click', (e) => {
                    const removeBtn = e.target.closest('.remove-item-btn');
                    if (removeBtn) {
                        // No minimum check for goals usually needed
                       if (confirm('Are you sure you want to remove this goal?')) {
                           removeBtn.closest('.goal-item-edit').remove();
                           updateGoalIndices(); // Renumber remaining inputs
                       }
                    }
                 });
            }
            updateGoalIndices(); // Initial setup
        });
    </script>
</body>
</html>